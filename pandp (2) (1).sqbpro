<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/hp/Downloads/pandp (2) (1).db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="1618"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,6:mainorders"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="accounts" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="40"/><column index="2" value="216"/><column index="3" value="213"/><column index="4" value="81"/><column index="5" value="93"/><column index="6" value="134"/><column index="7" value="90"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="orders" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="40"/><column index="2" value="79"/><column index="3" value="129"/><column index="4" value="97"/><column index="5" value="71"/><column index="6" value="81"/><column index="7" value="42"/><column index="8" value="131"/><column index="9" value="105"/><column index="10" value="115"/><column index="11" value="103"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="region" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="40"/><column index="2" value="64"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="sales_reps" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="49"/><column index="2" value="139"/><column index="3" value="68"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="web_events" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="40"/><column index="2" value="79"/><column index="3" value="129"/><column index="4" value="58"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">--1
-- SELECT name, website
-- FROM accounts
-- ORDER0 by name DESC

--2
-- select id ,account_id
-- from orders 
-- ORDER by total   
--
--3// sort the id and account id by ( first :total(DESC) , second : gloss_qty (ASC) )
-- 
--  select id,account_id
--  from orders
--  order by 
--  total DESC, gloss_qty ASC

--4//make inner join between accounts and orders and show all info 
-- first way
-- select * 
-- from accounts a, orders o
-- where a.id== o.account_id 
-- 5//second way 
-- select * 
-- from accounts a JOIN orders o
-- on a.id== o.account_id 

--6//make inner join between accounts and orders and show all info descinding by standard_qty
-- select * 
-- from accounts a INNER JOIN orders o
-- on a.id== o.account_id 
-- ORDER by standard_qty DESC

--7// make outer join t show id ,name, long, standard_qty, gloss_qty from the two tables accounts and orders 
-- SELECT accounts.id ,accounts.name ,accounts.long ,  orders.standard_qty , orders.gloss_qty
-- from accounts  LEFT OUTER JOIN orders
-- on accounts.id = orders.account_id

--8//show id, name, long , standard_qty , gloss_qty from the diffrent two tables sorted by standard_qty descending 
-- SELECT a.id ,a.name ,a.long , o.standard_qty , o.gloss_qty
-- FROM accounts a LEFT OUTER JOIN orders  o
-- on a.id= o.account_id
-- ORDER by standard_qty DESC
 
--  9//show id, name, long , standard_qty , gloss_qty from the diffrent two tables sorted by standard_qty descending  specialy for the info of table orders
-- SELECT  a.id , a.name ,a.long , o.standard_qty , o.gloss_qty
-- from accounts a RIGHT OUTER JOIN orders o
-- on a.id= o.account_id
--ORDER id DESC

--10// show a diffrent info from multible tables more than two 
--first way
-- SELECT accounts.id , accounts.name , accounts.long , orders.id ,orders.total ,web_events .id ,web_events.channel, web_events.occurred_at
-- from accounts , orders , web_events 
-- WHERE accounts.id=orders.account_id and accounts.id=web_events.account_id

--second way
-- SELECT accounts.id , accounts.name , accounts.long , orders.id ,orders.total ,web_events .id ,web_events.channel, web_events.occurred_at
--  from accounts join orders on accounts.id=orders.account_id
--  join web_events on accounts.id=web_events.account_id

--11// practic for case statment
--/ be focas for the (,) its important to end befor CASE
-- SELECT orders.id, orders.account_id, orders.gloss_qty ,
-- CASE
-- 	WHEN gloss_qty &lt; 200 THEN 'small'
-- 	WHEN gloss_qty BETWEEN 200 and 900 THEN 'mediem'
-- 	ELSE 'larg'
-- END
-- from orders
-- WHERE gloss_qty is NOT NULL
--12// orderd 
-- SELECT orders.id, orders.account_id, orders.gloss_qty ,
-- CASE
-- 	WHEN gloss_qty &lt; 200 THEN 'small'
-- 	WHEN gloss_qty BETWEEN 200 and 900 THEN 'mediem'
-- 	ELSE 'larg'
-- END
-- from orders
-- WHERE gloss_qty is NOT NULL
-- ORDER by orders.id DESC
-- 13// i will practic it by using numer to add or abstract from anouther value 
-- SELECT orders.id, orders.account_id, orders.gloss_qty , orders.total,
-- CASE
-- 	WHEN gloss_qty &lt; 200 THEN orders.total+ 20
-- 	WHEN gloss_qty BETWEEN 200 and 900 THEN  orders.total- 20
-- 	ELSE  orders.total- 100
-- END
-- from orders
-- WHERE gloss_qty is NOT NULL
-- 







 </sql><sql name="SQL 2">-- SELECT a.id ,a.name ,a.long , o.standard_qty , o.gloss_qty
-- FROM accounts a FULL OUTER JOIN orders  o
--  on a.id= o.account_id
--  ORDER by standard_qty DESC
SELECT *
from orders</sql><current_tab id="0"/></tab_sql></sqlb_project>
